
// Import packages
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Abhi
 */
public class ExhibitApplication extends javax.swing.JFrame {

    /**
     * Creates new form Exhibit
     */
    ExhibitQueries exhibitQueries;
    private List< Exhibit > results;   
    
    //Constructor
    public ExhibitApplication() {
        initComponents();
        exhibitQueries = new ExhibitQueries();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        locationTextField = new javax.swing.JTextField();
        displayExhibitsByLocationBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        heightTextField = new javax.swing.JTextField();
        displayExhibitsByHeightWeightBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        greatWeightTextField = new javax.swing.JTextField();
        displayExhibitsByWeightBtn = new javax.swing.JButton();
        exhibitsByWeight = new javax.swing.JLabel();
        clearOutputBtn = new javax.swing.JButton();
        exitApplicationBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        displayAllExhibitsBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        exhibitsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Museum Information Systems");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Exhibit Options"));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Exhibit (Location)"));

        displayExhibitsByLocationBtn.setText("Find");
        displayExhibitsByLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayExhibitsByLocationBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(displayExhibitsByLocationBtn)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayExhibitsByLocationBtn))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Exhibit  (Weight and Height)"));

        jLabel1.setText("Weight");

        jLabel2.setText("Height ");

        displayExhibitsByHeightWeightBtn.setText("Find");
        displayExhibitsByHeightWeightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayExhibitsByHeightWeightBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayExhibitsByHeightWeightBtn))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayExhibitsByHeightWeightBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Total Exhibit (Weight)"));

        displayExhibitsByWeightBtn.setText("Find");
        displayExhibitsByWeightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayExhibitsByWeightBtnActionPerformed(evt);
            }
        });

        exhibitsByWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(exhibitsByWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(greatWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(displayExhibitsByWeightBtn)
                        .addGap(30, 30, 30))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(greatWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayExhibitsByWeightBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exhibitsByWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        clearOutputBtn.setText("Clear Output Area");
        clearOutputBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearOutputBtnActionPerformed(evt);
            }
        });

        exitApplicationBtn.setText("Exit the Application");
        exitApplicationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitApplicationBtnActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Display All Exhibits"));

        displayAllExhibitsBtn.setText("Find");
        displayAllExhibitsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllExhibitsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(displayAllExhibitsBtn)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayAllExhibitsBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(clearOutputBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(exitApplicationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearOutputBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitApplicationBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Exhibit Output"));

        exhibitsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        exhibitsTable.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(exhibitsTable);

        jScrollPane3.setViewportView(jScrollPane2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Button to display all the Exhibits
    private void displayAllExhibitsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllExhibitsBtnActionPerformed
        // TODO add your handling code here:
        //sets the list 'results' with data obtained by performing query.
        try{
            results = exhibitQueries.displayAllExhibits();      
            //display data in jTable
            exhibitsTable.setModel(new TableModel(results));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No Data Found");
        }
    }//GEN-LAST:event_displayAllExhibitsBtnActionPerformed

    // Button to clear the table output
    private void clearOutputBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearOutputBtnActionPerformed
        // TODO add your handling code here:
        //clear the whole table when clear button is clicked
        exhibitsTable.setModel(new DefaultTableModel());
        DefaultTableModel dm = (DefaultTableModel)exhibitsTable.getModel();
        //get Vector of Vectors that contains table data
        dm.getDataVector().removeAllElements();
        locationTextField.setText("");
        weightTextField.setText("");
        heightTextField.setText("");
        greatWeightTextField.setText("");
        exhibitsByWeight.setText("");
    }//GEN-LAST:event_clearOutputBtnActionPerformed

    // Button to display exhibits by location
    private void displayExhibitsByLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayExhibitsByLocationBtnActionPerformed
        // TODO add your handling code here:
        if(!locationTextField.getText().equalsIgnoreCase("")){
            //sets the list 'results' with data obtained by performing query.
            results = exhibitQueries.displayExhibitsByLocation(locationTextField.getText().toString() );
            if(results.size() != 0)
            {
                //display data in jTable
                exhibitsTable.setModel(new TableModel(results));
            }
            else
            {
                //Dialog popup when no records found having inputted location
                JOptionPane.showMessageDialog(null, "No record found having name: "+locationTextField.getText().toString());
            }
        }else{
            //Dialog popup when location Textfield is empty.
            JOptionPane.showMessageDialog(null, "Please enter valid location in the Location Field!");
        }
    }//GEN-LAST:event_displayExhibitsByLocationBtnActionPerformed

    // Button to display exhibits by height and weight
    private void displayExhibitsByHeightWeightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayExhibitsByHeightWeightBtnActionPerformed
        // TODO add your handling code here
        try{
            if(!weightTextField.getText().equalsIgnoreCase("")&&!heightTextField.getText().equalsIgnoreCase("")){
                //sets the list 'results' with data obtained by performing query.
                results = exhibitQueries.displayExhibitsByHeightWeight(Float.parseFloat(weightTextField.getText().toString()), Float.parseFloat(heightTextField.getText().toString()) );
                if(results.size() != 0)
                {
                    //display data in jTable
                    exhibitsTable.setModel(new TableModel(results));
                }
                else
                {
                    //Dialog popup when no records found having inputted Height and Weight
                    JOptionPane.showMessageDialog(null, "No record found having Weight > "+weightTextField.getText().toString()+" and Height > "+heightTextField.getText().toString());
                }

            }else{
                if(weightTextField.getText().equalsIgnoreCase("")){
                    //Dialog popup when Weight Textfield is empty.
                    JOptionPane.showMessageDialog(null, "Please enter valid Weight in the Weight Field!");
                }else if(heightTextField.getText().equalsIgnoreCase("")){
                    //Dialog popup when Height Textfield is empty.
                    JOptionPane.showMessageDialog(null, "Please enter valid Height in the Height Field!");
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Height or Weight entered. Enter proper Height and Weight in number format");
        }
    }//GEN-LAST:event_displayExhibitsByHeightWeightBtnActionPerformed

    // Button to display exhibits having weight greater then specified one
    private void displayExhibitsByWeightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayExhibitsByWeightBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(!greatWeightTextField.getText().equalsIgnoreCase("")){
                //gets the number of exhibits obtained by performing query.
                int size = exhibitQueries.displayNoOfExhibitsByWeight(Float.parseFloat(greatWeightTextField.getText().toString()) );
                exhibitsByWeight.setText("Exhibits having weight greater than "+greatWeightTextField.getText()+" are: "+size);
            }else{
                if(greatWeightTextField.getText().equalsIgnoreCase("")){
                    //Dialog popup when greatWeight Textfield is empty.
                    JOptionPane.showMessageDialog(null, "Please enter valid Weight in the Weight Field!");
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Weight Entered. Enter proper weight in number format");
        }
    }//GEN-LAST:event_displayExhibitsByWeightBtnActionPerformed

    private void exitApplicationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitApplicationBtnActionPerformed
        // TODO add your handling code here:
        //exit from application
        dispose();
    }//GEN-LAST:event_exitApplicationBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExhibitApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExhibitApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExhibitApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExhibitApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //calls the constructor
                new ExhibitApplication().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearOutputBtn;
    private javax.swing.JButton displayAllExhibitsBtn;
    private javax.swing.JButton displayExhibitsByHeightWeightBtn;
    private javax.swing.JButton displayExhibitsByLocationBtn;
    private javax.swing.JButton displayExhibitsByWeightBtn;
    private javax.swing.JLabel exhibitsByWeight;
    private javax.swing.JTable exhibitsTable;
    private javax.swing.JButton exitApplicationBtn;
    private javax.swing.JTextField greatWeightTextField;
    private javax.swing.JTextField heightTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables
}
